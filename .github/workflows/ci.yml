name: Python CI

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

jobs:
  build:
    name: Build and run tests
    runs-on: ubuntu-latest

    strategy:
      matrix:
        python: [3.7, 3.9]

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python }}

      - name: Install pip-tools
        run: |
          python -m pip install --upgrade pip
          python -m pip install pip-tools

      - name: Install dependencies
        run: |
          pip-sync requirements.txt requirements-dev.txt

      - name: Run lint
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

      - name: Run tests
        run: |
          pytest -m "not integration"

  build-docker:
    name: Build docker image and run tests
    runs-on: ubuntu-latest

    strategy:
      matrix:
        image: [web, worker]
        include:
          - image: web
            config: structure-test/web.yaml
            dockerfile: Dockerfile-web
          - image: worker
            config: structure-test/worker.yaml
            dockerfile: Dockerfile-worker

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Install container-structure-test
        run: |
          curl -LO https://storage.googleapis.com/container-structure-test/latest/container-structure-test-linux-amd64 && chmod +x container-structure-test-linux-amd64 && sudo mv container-structure-test-linux-amd64 /usr/local/bin/container-structure-test

      - name: Build image
        env:
          IMAGE: ${{ matrix.image }}
          DOCKERFILE: ${{ matrix.dockerfile }}
        run: |
          docker build --file $DOCKERFILE --tag $IMAGE:latest .

      - name: Run tests
        env:
          IMAGE: ${{ matrix.image }}
          CONFIG: ${{ matrix.config }}
        run: |
          container-structure-test test --image $IMAGE:latest --config $CONFIG
